upstream app {
    server app:8000;
}
log_format  access  '[$time_local] "$request_method" "http://umb.10101111.coom$request_uri$args" $request_time';
log_format  accessm3query  '[$time_local] "$request_method" "http://app2:8000$request_uri$args" $request_time';

server {
    listen 80;
    charset utf-8;
    access_log off;

    location / {
        mirror /mirror;
        proxy_set_header Host $host:$server_port;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://app;
    }
    location /mirror {
        internal; # 内部配置
        proxy_pass http://127.0.0.1:10901$request_uri;
        proxy_pass_request_body off; # Indicates whether the original request body is passed to the proxied server. default value is on
        proxy_set_header Content-Length ""; # mirror_request_body/proxy_pass_request_body都设置为off，则Conten-length需要设置为""，否则有坑
        proxy_set_header X-Original-URI $request_uri; # 使用真实的url重置url
    }
}

server {
    # server没法设置为内部
    listen 127.0.0.1:10901;

    # lua_need_request_body on;

    # set $resp_body "";
    # body_filter_by_lua '
    #     local resp_body = string.sub(ngx.arg[1], 1, 1000)
    #     ngx.ctx.buffered = (ngx.ctx.buffered or "") .. resp_body
    #     if ngx.arg[2] then
    #         ngx.var.resp_body = ngx.ctx.buffered
    #     end
    #     ';
    location / {
        access_log /data/nginx/1.14.1/logs/web1/access.log accessm3query;
        proxy_pass http://app2:8000;
    }
}